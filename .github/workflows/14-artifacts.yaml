name: 14 - Working with Artifacts

on:
  workflow_dispatch:

env:
  build-artifact-key: app-${{ github.sha }}
  test-coverage-key: test-coverage-${{ github.sha }}

jobs:
  test-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        # This working directory is applied on all jobs and steps (only on run)
        working-directory: 14-artifacts/react-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # actions/setup-node@v4.4.0 already implement caching (7 days with same version)
      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20.x

      - name: Download cached dependencies
        id: cache
        uses: actions/cache@v3
        with:
          # It's important to provide the entire path, since the working-directory option set as default at the job level applies only to run commands.
          path: 14-artifacts/react-app/node_modules
          key: deps-node-modules-${{ hashFiles('14-artifacts/react-app/package-lock.json') }}
        
      - name: Install Dependencies
        # Install dependencies only if there is no cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Unit tests
        # To generate a coverage report when using Jest, simply pass the --coverage flag to the Jest command.
        # When using npm to run the test script, you have to add an additional -- before passing the --coverage flag, since the --coverage flag must be passed to the underlying jest command instead of the npm command.
        run: npm run test -- --coverage

      # Export test coverage
      - name: Uploaded test results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.test-coverage-key }}
          path: 14-artifacts/react-app/coverage

      - name: Build code
        run: npm run build

      - name: Upload build files
        uses: actions/upload-artifact@v4
        with:
          # Use an env to share artifact name between jobs
          name: ${{ env.build-artifact-key }}
          path: 14-artifacts/react-app/build


  deploy:
    runs-on: ubuntu-latest
    needs: 
      - test-build
    steps:
      - name: Download build files
        uses: actions/download-artifact@v4
        with:
          # Use an env to share artifact name between jobs
          name: ${{ env.build-artifact-key }}
          path: build
          
      - name: Show folder structure
        run: ls -R
